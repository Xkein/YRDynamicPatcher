# This is a basic workflow to help you get started with Actions

name: release build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SOLUTION_PATH: DynamicPatcher.sln
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Checkout submodules
        run: git submodule update --init --recursive
        
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1
    
      #- name: Restore NuGet packages
      #  working-directory: ${{env.GITHUB_WORKSPACE}}
      #  run: nuget restore ${{env.SOLUTION_PATH}}

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        env:
          PROPERTY_GITHUB: -p:GitCommit=${{github.sha}} -p:GitBranch=${{github.ref}}
        # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
        run: |
          msbuild -m -t:restore ${{env.SOLUTION_PATH}}
          msbuild -m -p:Configuration=Debug ${{env.PROPERTY_GITHUB}} ${{env.SOLUTION_PATH}}
          msbuild -m -p:Configuration=Release ${{env.PROPERTY_GITHUB}} ${{env.SOLUTION_PATH}}
          
      - name: Copy compiled files
        if: ${{success()}}
        working-directory: ${{env.GITHUB_WORKSPACE}}/Sample
        run: make-files.bat
        
      - name: Upload Artifact
        if: ${{success()}}
        uses: actions/upload-artifact@v2
        env:
          SAMPLE_DIRECTORY: ${{env.GITHUB_WORKSPACE}}/Sample  
        with:
          name: release-${{github.sha}}
          path: |
            ${{env.SAMPLE_DIRECTORY}}/DynamicPatcher/
            ${{env.SAMPLE_DIRECTORY}}/PatcherLoader.dll
            ${{env.SAMPLE_DIRECTORY}}/DynamicPatcher.dll
            ${{env.SAMPLE_DIRECTORY}}/DynamicPatcher_RELEASE.dll
            
